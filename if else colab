{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPnjfWM7DYiAsNfEVXkZ4bL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/virendrasingh112/assignment/blob/colab---upload/if%20else%20colab\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "mxBTRygO0s4T"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y2rGVevgAzJA",
        "outputId": "e6a37d0e-e9fc-4088-bf48-816ccf4df900"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number:12\n",
            "even number 12\n"
          ]
        }
      ],
      "source": [
        "n = int(input(\"enter the number:\"))\n",
        "if n%2==0:\n",
        "    print(\"even number\",n)\n",
        "else:\n",
        "    print(\"odd number\",n)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#largest amog three numbers\n",
        "a= int(input(\"enter the number:\"))\n",
        "b= int(input(\"enter the number:\"))\n",
        "c= int(input(\"enter the number:\"))\n",
        "if a>b and a>c:\n",
        "    print(\"a is largest\",a)\n",
        "elif b>a and b>c:\n",
        "    print(\"b is largest\",b)\n",
        "else:\n",
        "    print(\"c is largest\",c)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pQUWkyKlBxQ6",
        "outputId": "6d1ad6b1-a4db-4382-f5ca-d34baab367fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number:1\n",
            "enter the number:2\n",
            "enter the number:3\n",
            "c is smallest 3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "marks = int(input(\"enter the marks:\"))\n",
        "if marks>=90:\n",
        "    print(\"grade A\")\n",
        "elif marks>=80:\n",
        "    print(\"grade B\")\n",
        "elif marks>=70:\n",
        "    print(\"grade C\")\n",
        "elif marks>=60:\n",
        "    print(\"grade D\")\n",
        "else:\n",
        "     print(\"failed\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4z9-5otqDO5C",
        "outputId": "1d6c2cef-6019-40b5-9bec-05b3b15402e5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the marks:99\n",
            "grade A\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "hum = input(\"Enter the alphabet: \")\n",
        "\n",
        "if  hum in \"aeiou\":\n",
        "    print(\"Vowel\")\n",
        "else:\n",
        "    print(\"Consonant\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sryU_lRi0Aom",
        "outputId": "092be8e0-f6e9-4ed2-f0e0-783cc2c36bdd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter the alphabet: a\n",
            "Vowel\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input(\"enter the number:\"))\n",
        "b = int(input(\"enter the number:\"))\n",
        "print(\"sum\",a+b)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PfbmvQM3OmVq",
        "outputId": "d4fa0fcb-b0f1-414a-85aa-71b85a9747e1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number:1\n",
            "enter the number:2\n",
            "sum 3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input(\"enter the number:\"))\n",
        "b = int(input(\"enter the number:\"))\n",
        "print(\"sub\",a-b)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RljNgJ0LScRk",
        "outputId": "f39c2ad1-34f7-44ac-c668-502e057f3731"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number:7\n",
            "enter the number:5\n",
            "sub 2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input(\"enter the number\"))\n",
        "b = int(input(\"enter the number\"))\n",
        "print(\"multiplication\",a*b)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nrecKBIgSjpK",
        "outputId": "f734d1a7-6550-434b-e75c-60785bb0520b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number3\n",
            "enter the number2\n",
            "multiplication 6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input(\"enter the number\"))\n",
        "b = int(input(\"enter the number\"))\n",
        "print(\"divide\",a/b)"
      ],
      "metadata": {
        "id": "xdYtVZ7WS32j"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "username = input(\"Enter the username: \")\n",
        "password = input(\"Enter the password: \")\n",
        "\n",
        "if username == \"admin\" and password == \"password123\":\n",
        "    print(\"Login successful\")\n",
        "else:\n",
        "    print(\"inavid\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bzvGo7oKUVbu",
        "outputId": "1f237b43-c0ea-43df-8ab6-11b83e6b8d41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter the username: yas\n",
            "Enter the password: kash\n",
            "inavid\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input(\"enter the number:\"))\n",
        "b = int(input(\"enter the number:\"))\n",
        "c = int(input(\"enter the number:\"))\n",
        "if a+b>c and b+c>a and c+a>b:\n",
        "    print(\"valid triangle\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "erYbg5X43dhc",
        "outputId": "b96b181e-3090-483d-d42a-9f1ebfb0b134"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number:5\n",
            "enter the number:6\n",
            "enter the number:8\n",
            "valid triangle\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "weight = float(input(\"Enter your weight in kilograms: \"))\n",
        "height = float(input(\"Enter your height in meters: \"))\n",
        "\n",
        "bmi = weight / (height ** 2)\n",
        "\n",
        "print(\"\\nYour BMI is:\", bmi)\n",
        "\n",
        "if bmi < 18.5:\n",
        "    print(\" Underweight\")\n",
        "elif 18.5 <= bmi < 24.9:\n",
        "    print(\" Normal weight\")\n",
        "elif 25 <= bmi < 29.9:\n",
        "    print(\" Overweight\")\n",
        "else:\n",
        "    print(\"Obesity\")\n"
      ],
      "metadata": {
        "id": "ZL34wZRy-fdu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5520a319-69d9-49d3-c98b-b5bc7db063a5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter your weight in kilograms: 1009\n",
            "Enter your height in meters: 9\n",
            "\n",
            "Your BMI is: 12.45679012345679\n",
            " Underweight\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num = float(input(\"enter the number \"))\n",
        "if num > 1000:\n",
        "    discount = num*0.10\n",
        "elif num >= 500:\n",
        "    discount = num*0.5\n",
        "    print(\"discount\",discount)\n",
        "else:\n",
        "    discount = 0\n",
        "final_price = num - discount\n",
        "print(\"final price after the discount\",final_price)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F2yuUHwMVZDp",
        "outputId": "e8f13dcd-8b12-4b0c-ff52-f74a442b69ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number 1200\n",
            "final price after the discount 1080.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "age = int(input(\"enter the age\"))\n",
        "if age >= 0 and age <= 1:\n",
        "    print(\"infant\")\n",
        "elif age >=2 and age <= 3:\n",
        "    print(\"toddler\")\n",
        "elif age >=5 and age<=12:\n",
        "    print(\"child\")\n",
        "elif age >=13 and age<= 19:\n",
        "    print(\"teenager\")\n",
        "elif age>= 20 and age <= 59:\n",
        "    print(\"adult\")\n",
        "elif age <= 60:\n",
        "    print(\"senior\")\n",
        "else:\n",
        "    print(\"invaild age\")\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "72ekl12pX8VL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "713867b5-354c-4938-deff-498b0b89d1fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the age76\n",
            "invaild age\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "day = int(input(\"enter the number\"))\n",
        "if day ==1:\n",
        "    print(\"sunday\")\n",
        "elif day ==2:\n",
        "    print(\"monday\")\n",
        "elif day ==3:\n",
        "    print(\"tuesday\")\n",
        "elif day ==4:\n",
        "    print(\"wednesday\")\n",
        "elif day ==5:\n",
        "    print(\"thursday\")\n",
        "elif day ==6:\n",
        "    print(\"friday\")\n",
        "elif day ==7:\n",
        "    print(\"saturday\")\n",
        "else:\n",
        "    print(\"inavild number of day\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5lQf30CucOGp",
        "outputId": "af5253dd-017f-4fb3-ff66-6484cfa292e9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number8\n",
            "inavild number of day\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "i9l87wK4xh1R"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}